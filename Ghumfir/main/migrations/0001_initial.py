# Generated by Django 5.2.7 on 2025-11-01 02:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Place Name')),
                ('region', models.CharField(blank=True, max_length=200, verbose_name='Region/District')),
                ('destination_type', models.CharField(choices=[('cultural', 'Cultural'), ('natural', 'Natural'), ('historical', 'Historical'), ('adventure', 'Adventure'), ('religious', 'Religious'), ('mix', 'Mixed/Other')], default='mix', max_length=20, verbose_name='Type of Destination')),
                ('popularity', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='medium', max_length=20, verbose_name='Popularity')),
                ('best_season', models.CharField(blank=True, max_length=100, verbose_name='Best Season to Visit')),
                ('starting_point', models.CharField(blank=True, max_length=200, verbose_name='Starting Point')),
                ('route_overview', models.TextField(blank=True, verbose_name='Route Overview')),
                ('ending_point', models.CharField(blank=True, max_length=200, verbose_name='Ending Point')),
                ('duration_days', models.PositiveIntegerField(blank=True, help_text='Approximate number of days', null=True, verbose_name='Duration (Days)')),
                ('altitude_m', models.IntegerField(blank=True, null=True, verbose_name='Altitude/Elevation (Meters)')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('moderate', 'Moderate'), ('hard', 'Hard'), ('extreme', 'Extreme')], default='moderate', max_length=20, verbose_name='Difficulty Level')),
                ('transportation_access', models.TextField(blank=True, help_text='How to reach: road, flight, trek, etc.', verbose_name='Transportation Access')),
                ('lodges_hotels', models.TextField(blank=True, verbose_name='Available Lodges/Hotels')),
                ('food_availability', models.CharField(blank=True, max_length=200, verbose_name='Food Availability')),
                ('permit_required', models.BooleanField(default=False, verbose_name='Permit Required')),
                ('emergency_facilities', models.TextField(blank=True, verbose_name='Emergency Facilities')),
                ('adventure_type', models.CharField(blank=True, max_length=200, null=True)),
                ('cultural_attractions', models.TextField(blank=True, null=True)),
                ('language_customs', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('local_community', models.CharField(blank=True, max_length=200, null=True)),
                ('not_to_miss_spots', models.TextField(blank=True, null=True)),
                ('photography_hotspots', models.TextField(blank=True, null=True)),
                ('unique_traditions', models.TextField(blank=True, null=True)),
                ('wildlife_highlights', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('mobile_no', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='Profile')),
                ('points', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmergencyEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emergency_email', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuideProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_location', models.CharField(max_length=250)),
                ('secondary_location', models.CharField(blank=True, max_length=250, null=True)),
                ('experience', models.CharField(choices=[('no experience', 'No Experience'), ('1-3 yrs', '1-3 Yrs'), ('3-5 yrs', '3-5 Yrs'), ('above 5 yrs', 'Above 5 Yrs')], max_length=20)),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=2)),
                ('description', models.TextField(blank=True, null=True)),
                ('languages', models.CharField(max_length=350)),
                ('specialization', models.CharField(blank=True, max_length=150, null=True)),
                ('rate_per_hour', models.DecimalField(decimal_places=2, max_digits=8)),
                ('Licenced', models.BooleanField(default=False)),
                ('trip_completed', models.PositiveIntegerField(default=0)),
                ('is_verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MemoryMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='Memories')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], max_length=10)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='main.memory')),
            ],
        ),
    ]
